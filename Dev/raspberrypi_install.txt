# python虚拟环境
#git clone https://github.com/yyuu/pyenv.git ~/.pyenv    
#http://www.cnblogs.com/npumenglei/p/3719412.html


#for zhcnutf8
sudo locale-gen
sudo apt-get install language-pack-zh-hant-base language-pack-zh-hans-base
sudo vim /etc/environment
LC_ALL=”zh_CN.UTF-8″
sudo dpkg-reconfigure locales

#for ubuntu
sudo apt-get update
sudo apt-get install vim
sudo apt-get install git
sudo apt-get install curl
sudo apt-get install tmux
sudo apt-get install build-essential
sudo apt-get install zsh git wget
sudo apt-get install silversearcher-ag
sudo apt-get install gnome-tweak-tool
sudo apt-get install trash-cli
wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
chsh -s /bin/zsh
sudo apt-get install nautilus-open-terminal
nautilus -q



#for python
export EDITOR=vi
export PYTHONIOENCODING=UTF-8    # for python moidfy rc file bashrc or zshrc
sudo apt-get install build-essential libssl-dev libevent-dev  libjpeg-dev libxml2-dev libxslt-dev
sudo apt-get install libcurl4-openssl-dev
sudo apt-get install python-pip
sudo pip install virtualenv
sudo apt-get install python-dev
sudo apt-get install ipython
sudo apt-get install zlib1g-dev
sudo apt-get install libudev-dev
sudo apt-get install  libffi-dev
pip install pyopenssl ndg-httpsclient pyasn1

使用豆瓣的源:
要配制成默认的话，需要创建或修改配置文件（linux的文件在~/.pip/pip.conf，windows在%HOMEPATH%\pip\pip.ini），修改内容为：

[global]
index-url = http://pypi.douban.com/simple

#for python utf-8
sudo vi /usr/lib/python2.7/sitecustomize.py
#!/usr/bin/env python
# -*- coding:utf-8 -*-

import sys

if sys.getdefaultencoding() != 'utf-8':
    reload(sys)
    sys.setdefaultencoding('utf-8')

#modify capslock

sudo vi /etc/default/keyboard
修改下面这一行：（改变capslock为ctrl）
XKBOPTIONS="ctrl:nocaps"
或者可以交换capslock和ctrl
XKBOPTIONS="ctrl:nocaps"
最后：
sudo dpkg-reconfigure keyboard-configuration



树莓派安转配置:
默认用户名：pi
默认密码：raspberry
配置：$sudo raspi-config
无线网络：
sudo vi  /etc/network/interfaces
2)无线网卡的配置
使用vi打开以下文件进行修改：
auto lo
iface lo inet loopback
iface eth0 inet dhcp
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
wpa-ssid "360WiFi"
wpa-psk "hellworld"


#wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
重启即可连入:网络名为360WIFI，密码为helloworld的网络，
如果想要设置为静态ip，类似有线网卡，修改相应代码即可
。
改变更新源：
笔者测试这个默认的网址还是挺快的，网络上有人建议改变更新源为国内的（我没发现快多少，大家根据自己网络选择）：
sudo vi /etc/apt/sources.list
将默认的用#号屏蔽，改为
deb http://mirrors.ustc.edu.cn/raspbian/raspbian/   wheezy main contrib non-free rpi
或者
deb http://mirror.nus.edu.sg/raspbian/raspbian wheezy main contrib non-free rpi

或者用以下地址代替上面的地址栏

中山大学
Raspbian http://mirror.sysu.edu.cn/raspbian/raspbian/

中国科学技术大学
Raspbian http://mirrors.ustc.edu.cn/raspbian/raspbian/

清华大学
Raspbian http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/

华中科技大学
Raspbian http://mirrors.hustunique.com/raspbian/raspbian/
Arch Linux ARM http://mirrors.hustunique.com/archlinuxarm/
大连东软信息学院源（北方用户）
Raspbian http://mirrors.neusoft.edu.cn/raspbian/raspbian/

开机启动：

sudo vi /etc/inittab
向下滚动，找到行               1:2345:respawn:/sbin/getty 115200 tty1
注释掉这一行，修改为       #1:2345:respawn:/sbin/getty 115200 tty1
在该行下增加一行内容
1:2345:respawn:/bin/login -f pi tty1 /dev/tty1 2>&1

按Ctrl+X退出，记得按Y键保存
原理：linux启动时，会读取inittab文件，执行其中的登录命令，以pi用户名自动登录



4 Internationalisation Options  国际化选项，可以更改默认语言
  I1 Change Locale
     语言和区域设置，建议不要改，默认英文就好。想改中文，最好选安装了中文字体再进行这步，安装中文字体的方法：
     sudo apt-get update
     sudo apt-get install ttf-wqy-zenhei ttf-wqy-microhei
     移动到屏幕底部，用空格键选中zh-CN GB2312,zh-CN GB18030,zh-CN UTF-8,然后按回车，然后默认语言选中zh-cn然后回车
  I2 Change Timezone
     设置时区，如果不进行设置，PI的时间就显示不正常。选择Asia（亚洲）再选择Chongqing（重庆）即可。
  I3 Change Keyboard Layout
      改变键盘布局


使用github：
3、在本地建立一个文件夹，然后做一些全局变量的初始化

git config --global user.name = "用户名或者用户ID"

git config --global user.email = "邮箱"

这两个选项会在以后的使用过程中自动添加到代码中。

4、创建验证用的公钥

这个是比较复杂和困扰大多数人的地方，因为 git 是通过 ssh 的方式访问资源库的，所以需要在本地创建验证用的文件。

使用命令：ssh-keygen -C ‘291374108@qq.com' -t rsa

会在用户目录 ~/.ssh/ 下建立相应的密钥文件

可以使用 ssh -v git@github.com 命令来测试链接是否畅通

5、上传公钥

在 github.com 的界面中 选择右上角的 Account Settings，然后选择 SSH Public Keys ，选择新加。

Title 可以随便命名，Key 的内容拷贝自 ~/.ssh/id_rsa.pub 中的内容，完成后，可以再使用 ssh -v git@github.com 进行测试。看到下面的信息表示验证成功。
目录：
制作引导SD卡
安装操作系统Raspbian到U盘
扩展分区
参考文章
树莓派官方的操作系统Raspbian最少需要4G的SDCard，如果你恰好有比较小的SD卡怎么办呢？设计上树莓派只能从SD卡引导启动，但我们可以在SD卡上装一个最小的引导系统，然后把树莓派引导到U盘上启动。SD卡连续运行，读写比较频繁也容易损坏（我已经坏掉3张了。。。），相比之下U盘价格便宜些，读写速度可以比SD卡还高。

U盘装系统步骤：
制作引导SD卡
这个引导系统只需要16M容量的SD卡，先把SD卡格式化成FAT（windows），然后拷贝下面的文件到根目录。

git clone https://github.com/hugozhu/mini_raspbian_boot
修改 cmdline.txt 中的 root=/dev/mmcblk0p2 为 root=/dev/sda2 以指定用U盘启动

dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1
root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait
cgroup_enable=memory
安装操作系统Raspbian到U盘
方法和安装到SD卡一样，在Mac上使用 dd
命令安装，在Windows上可以用win32diskimager：

sudo dd bs=1m if=2015-01-31-raspbian.img of=/dev/disk4 #/dev/disk4
扩展分区
如果你的U盘容量大于4G，那么上一步安装完后，你的U盘只能看到4G空间，大容量的SD卡的这个问题可以通过自带的raspi-config命令来解决。
Linux下可以用fdisk来解决，我的方法是把该U盘插到已经正常启动的树莓派的USB口上，正常识别后，执行sudo
fdisk /dev/sda

按p后打印出分区表：
/dev/sda1            8192      122879       57344    c  W95 FAT32 (LBA)
    /dev/sda2          122880     6399999     3138560   83  Linux
    记住/dev/sda2的起始点122880'，然后按d，删除掉二个分区，接着按n重新创建一个分区，起始点就设置为122880，结束点可以设置为最大6399999

    最后按w保存新的分区表

    插上引导SD卡和系统U盘后树莓派就可以愉快的运行起来了，如果U盘的速度足够快，你会发现系统还变快了。

    参考文章
    http://www.raspberrypi.org/boot-from-a-16mb-sd-card/

http://bbs.elecfans.com/jishu_450347_1_1.html
http://viiiv.lofter.com/post/46b29a_2d34eaa


********如果用u盘启动检查失败，把init.d里边的checkfs.sh注释掉。****************


脚本加上去后记住加上+x可执行权限。
upload_all.sh
#!/bin/bash

PREFIX=$(cd "$(dirname "$0")"; pwd)
cd $PREFIX

python -u -m WeiboApp.db.upload_all_girls
python -u -m WeiboApp.db.upload_all_funnygif
python -u -m WeiboApp.db.upload_all_animals
python -u -m WeiboApp.db.upload_all_fashion
python -u -m WeiboApp.db.upload_all_boys

upload_sexy.sh

#!/bin/bash

PREFIX=$(cd "$(dirname "$0")"; pwd)
cd $PREFIX

python -u -m WeiboApp.db.upload_sexy


crontab:注意把路径wnn改成pi

* */15 * * * /home/wnn/program/upload_all.sh >> /home/wnn/program/upload_all_log 2>
&1
0 * * * * /home/wnn/program/WeiboApp/run_weibo_app.sh >> /home/wnn/program/weiboap
p_log 2>&1                                    

